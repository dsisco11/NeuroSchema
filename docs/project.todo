Neuro Format:
    ✔ Implement 'metadata' section for model metadata. @done(25-06-25 20:58)
    ✔ Implement 'imports' section for external data importing (eg: model weights). @done(25-06-25 20:58)
    ✔ Implement 'constants' section for defining constant values. @done(25-06-25 20:58)
    ✔ Implement 'inputs' section for defining input tensors. @done(25-06-25 20:58)
    ✔ Implement 'outputs' section for defining output tensors. @done(25-06-25 20:59)
    ✔ Implement 'definitions' section for specifying reusable node definitions. @done(25-06-25 20:59)
    ✔ Implement common data value types (int8-64, float16-64, bool, etc). @done(25-06-25 21:01)
    ✔ Implement common math operator types (add, subtract, multiply, divide, etc). @done(25-06-25 21:01)
    ✔ Implement common tensor operations (reshape, transpose, slice, etc). @done(25-06-25 21:01)
    ☐ Implement common neural network layers (conv2d, linear, relu, etc).
    ☐ Implement common neural network architectures (resnet, vgg, transformer, unet, etc).
    ☐ Document the `metadata.model.ui` section of the Neuro format.
    
Refactoring:
    ✔ Refactor constants handling - remove redundant metadata.model.constants and enhance root-level constants with description field. @done(25-06-25 21:15)
    ✔ Replace 'subgraph' arrays with unified 'graph' object structure across all schemas and examples. @done(25-06-25 21:30)
        ✔ Updated main schema (neuro.schema.json) to use graph structure with nodes array
        ✔ Updated architectures schema to use new graph structure  
        ✔ Updated all example files (sequential_classifier, multimodal, encoders, configs)
        ✔ Updated all test files with graph structure
        ✔ Updated documentation and README.md
        ✔ Added comprehensive build task for JSON validation
        Note: Advanced graph validation (topology, linearity) deferred to future linting tool, not JSON Schema
