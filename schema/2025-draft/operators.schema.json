{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://raw.githubusercontent.com/neuro-graph/schemas/2025-1/operators.schema.json",
  "title": "NeuroGraph Operators Schema",
  "description": "Schema definitions for NeuroGraph operator types and their specifications",
  "definitions": {
    "anyfloat": {
      "$ref": "neuro.schema.json#/definitions/anyfloat"
    },
    "anyint": {
      "$ref": "neuro.schema.json#/definitions/anyint"
    },
    "anyuint": {
      "$ref": "neuro.schema.json#/definitions/anyuint"
    },
    "anynumeric": {
      "$ref": "neuro.schema.json#/definitions/anynumeric"
    },
    "operator_type": {
      "oneOf": [
        {
          "type": "string",
          "enum": [
            "identity",
            "add",
            "subtract",
            "multiply",
            "divide",
            "power",
            "sqrt",
            "abs",
            "neg",
            "sin",
            "cos",
            "tan",
            "exp",
            "log",
            "floor",
            "ceil",
            "round",
            "min",
            "max",
            "sum",
            "mean",
            "variance",
            "std",
            "matmul",
            "dot",
            "transpose",
            "reshape",
            "concat",
            "split",
            "slice"
          ],
          "description": "Built-in mathematical and tensor operator types"
        },
        {
          "$ref": "neuro.schema.json#/definitions/qualified_name",
          "description": "Third-party extension types using namespace:operator format (e.g., 'ext:custom_operator')"
        }
      ],
      "description": "Operator type - either a built-in mathematical operator or a namespaced extension"
    },
    "arithmetic_binary_operator": {
      "type": "object",
      "required": ["type", "inputs"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["add", "subtract", "multiply", "divide", "power"]
        },
        "inputs": {
          "type": "array",
          "minItems": 2,
          "maxItems": 2,
          "items": {
            "type": "object",
            "required": ["name", "dtype"],
            "properties": {
              "name": { "type": "string" },
              "dtype": { "$ref": "#/definitions/anynumeric" },
              "shape": { "type": "array", "items": { "type": "integer" } },
              "description": { "type": "string" }
            }
          },
          "description": "Two input tensors for binary arithmetic operator"
        },
        "outputs": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "object",
            "required": ["name", "dtype"],
            "properties": {
              "name": { "type": "string" },
              "dtype": { "$ref": "#/definitions/anynumeric" },
              "shape": { "type": "array", "items": { "type": "integer" } },
              "description": { "type": "string" }
            }
          }
        },
        "attributes": {
          "type": "object",
          "properties": {
            "broadcast": {
              "type": "boolean",
              "default": true,
              "description": "Whether to allow broadcasting of input tensors"
            }
          }
        }
      }
    },
    "arithmetic_unary_operator": {
      "type": "object",
      "required": ["type", "inputs"],
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "sqrt",
            "abs",
            "neg",
            "sin",
            "cos",
            "tan",
            "exp",
            "log",
            "floor",
            "ceil",
            "round"
          ]
        },
        "inputs": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "object",
            "required": ["name", "dtype"],
            "properties": {
              "name": { "type": "string" },
              "dtype": { "$ref": "#/definitions/anynumeric" },
              "shape": { "type": "array", "items": { "type": "integer" } },
              "description": { "type": "string" }
            }
          }
        },
        "outputs": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "object",
            "required": ["name", "dtype"],
            "properties": {
              "name": { "type": "string" },
              "dtype": { "$ref": "#/definitions/anynumeric" },
              "shape": { "type": "array", "items": { "type": "integer" } },
              "description": { "type": "string" }
            }
          }
        }
      }
    },
    "reduction_operator": {
      "type": "object",
      "required": ["type", "inputs"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["min", "max", "sum", "mean", "variance", "std"]
        },
        "inputs": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "object",
            "required": ["name", "dtype"],
            "properties": {
              "name": { "type": "string" },
              "dtype": { "$ref": "#/definitions/anynumeric" },
              "shape": { "type": "array", "items": { "type": "integer" } },
              "description": { "type": "string" }
            }
          }
        },
        "outputs": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "object",
            "required": ["name", "dtype"],
            "properties": {
              "name": { "type": "string" },
              "dtype": { "$ref": "#/definitions/anynumeric" },
              "shape": { "type": "array", "items": { "type": "integer" } },
              "description": { "type": "string" }
            }
          }
        },
        "attributes": {
          "type": "object",
          "properties": {
            "axis": {
              "oneOf": [
                { "type": "integer" },
                { "type": "array", "items": { "type": "integer" } },
                { "type": "null" }
              ],
              "description": "Axis or axes along which to perform the reduction. null means all axes"
            },
            "keepdims": {
              "type": "boolean",
              "default": false,
              "description": "Whether to keep the reduced dimensions"
            }
          }
        }
      }
    },
    "linear_algebra_operator": {
      "type": "object",
      "required": ["type", "inputs"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["matmul", "dot", "transpose"]
        },
        "inputs": {
          "type": "array",
          "items": {
            "type": "object",
            "required": ["name", "dtype"],
            "properties": {
              "name": { "type": "string" },
              "dtype": { "$ref": "#/definitions/anynumeric" },
              "shape": { "type": "array", "items": { "type": "integer" } },
              "description": { "type": "string" }
            }
          }
        },
        "outputs": {
          "type": "array",
          "minItems": 1,
          "maxItems": 1,
          "items": {
            "type": "object",
            "required": ["name", "dtype"],
            "properties": {
              "name": { "type": "string" },
              "dtype": { "$ref": "#/definitions/anynumeric" },
              "shape": { "type": "array", "items": { "type": "integer" } },
              "description": { "type": "string" }
            }
          }
        },
        "attributes": {
          "type": "object",
          "properties": {
            "axes": {
              "type": "array",
              "items": { "type": "integer" },
              "description": "For transpose: axes permutation. For matmul: specific axes to multiply"
            }
          }
        }
      }
    },
    "tensor_manipulation_operator": {
      "type": "object",
      "required": ["type", "inputs"],
      "properties": {
        "type": {
          "type": "string",
          "enum": ["reshape", "concat", "split", "slice"]
        },
        "inputs": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["name", "dtype"],
            "properties": {
              "name": { "type": "string" },
              "dtype": { "$ref": "#/definitions/anynumeric" },
              "shape": { "type": "array", "items": { "type": "integer" } },
              "description": { "type": "string" }
            }
          }
        },
        "outputs": {
          "type": "array",
          "minItems": 1,
          "items": {
            "type": "object",
            "required": ["name", "dtype"],
            "properties": {
              "name": { "type": "string" },
              "dtype": { "$ref": "#/definitions/anynumeric" },
              "shape": { "type": "array", "items": { "type": "integer" } },
              "description": { "type": "string" }
            }
          }
        },
        "attributes": {
          "type": "object",
          "properties": {
            "shape": {
              "type": "array",
              "items": { "type": "integer" },
              "description": "For reshape: target shape"
            },
            "axis": {
              "type": "integer",
              "description": "For concat: axis along which to concatenate. For split: axis along which to split"
            },
            "indices": {
              "type": "array",
              "items": { "type": "integer" },
              "description": "For split: split indices. For slice: start indices"
            },
            "sizes": {
              "type": "array",
              "items": { "type": "integer" },
              "description": "For slice: size of each dimension to slice"
            }
          }
        }
      }
    },
    "operator_specification": {
      "oneOf": [
        { "$ref": "#/definitions/arithmetic_binary_operator" },
        { "$ref": "#/definitions/arithmetic_unary_operator" },
        { "$ref": "#/definitions/reduction_operator" },
        { "$ref": "#/definitions/linear_algebra_operator" },
        { "$ref": "#/definitions/tensor_manipulation_operator" }
      ],
      "description": "Complete specification for a node operator including inputs, outputs, and attributes"
    }
  }
}
