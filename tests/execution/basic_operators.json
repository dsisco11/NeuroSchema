{
  "$schema": "../tests.schema.json",
  "metadata": {
    "name": "Basic Operator Execution Tests",
    "version": "1.0.0",
    "description": "Tests for validating basic operator execution correctness",
    "category": "execution"
  },
  "tests": [
    {
      "id": "add_operator_basic",
      "title": "Add Operator Basic Test",
      "description": "Verify that the add operator correctly adds two tensors",
      "feature": "operator_execution",
      "tags": ["operators", "arithmetic", "basic"],
      "inputs": {
        "neuro_fragment": {
          "type": "add",
          "attributes": {
            "dtype": "float32"
          }
        },
        "input_data": {
          "input_a": {
            "shape": [2, 2],
            "dtype": "float32",
            "data": [[1.0, 2.0], [3.0, 4.0]]
          },
          "input_b": {
            "shape": [2, 2],
            "dtype": "float32", 
            "data": [[0.5, 1.5], [2.5, 3.5]]
          }
        }
      },
      "expected": {
        "success": true,
        "output_data": {
          "result": {
            "shape": [2, 2],
            "dtype": "float32",
            "data": [[1.5, 3.5], [5.5, 7.5]],
            "tolerance": 1e-6
          }
        }
      }
    },
    {
      "id": "linear_layer_basic",
      "title": "Linear Layer Basic Test", 
      "description": "Verify that a linear layer correctly performs matrix multiplication and bias addition",
      "feature": "layer_execution",
      "tags": ["layers", "linear", "basic"],
      "inputs": {
        "neuro_fragment": {
          "type": "linear",
          "attributes": {
            "in_features": 3,
            "out_features": 2,
            "bias": true
          }
        },
        "input_data": {
          "input": {
            "shape": [1, 3],
            "dtype": "float32",
            "data": [[1.0, 2.0, 3.0]]
          },
          "weight": {
            "shape": [2, 3],
            "dtype": "float32",
            "data": [[0.1, 0.2, 0.3], [0.4, 0.5, 0.6]]
          },
          "bias": {
            "shape": [2],
            "dtype": "float32",
            "data": [0.1, 0.2]
          }
        }
      },
      "expected": {
        "success": true,
        "output_data": {
          "result": {
            "shape": [1, 2],
            "dtype": "float32",
            "data": [[1.5, 3.5]],
            "tolerance": 1e-6
          }
        }
      }
    }
  ]
}
