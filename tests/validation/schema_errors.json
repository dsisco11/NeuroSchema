{
  "$schema": "../tests.schema.json",
  "metadata": {
    "name": "Schema Validation Error Tests",
    "version": "1.0.0",
    "description": "Tests for various schema validation error conditions",
    "category": "validation"
  },
  "tests": [
    {
      "id": "invalid_json_syntax",
      "title": "Invalid JSON Syntax",
      "description": "Verify that malformed JSON is properly detected",
      "feature": "json_parsing",
      "tags": ["parsing", "json", "syntax"],
      "inputs": {
        "parameters": {
          "malformed_json": "{ \"metadata\": { \"model\": { \"name\": \"test\" } "
        }
      },
      "expected": {
        "error": {
          "code": "neuro.schema.invalid_json",
          "message_pattern": ".*malformed.*JSON.*"
        }
      },
      "metadata": {
        "priority": "critical"
      }
    },
    {
      "id": "invalid_dtype",
      "title": "Invalid Data Type",
      "description": "Verify that invalid dtype specifications are rejected",
      "feature": "schema_validation",
      "tags": ["validation", "dtype"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "test_model",
              "version": "1.0.0"
            }
          },
          "inputs": [
            {
              "name": "input",
              "shape": [10],
              "dtype": "float128"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "shape": [1],
              "dtype": "float32"
            }
          ],
          "export": []
        }
      },
      "expected": {
        "error": {
          "code": "neuro.schema.invalid_dtype",
          "message_pattern": ".*float128.*not.*supported.*"
        }
      },
      "metadata": {
        "priority": "high"
      }
    },
    {
      "id": "invalid_tensor_shape",
      "title": "Invalid Tensor Shape",
      "description": "Verify that invalid tensor shapes are rejected",
      "feature": "schema_validation", 
      "tags": ["validation", "shape"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "test_model", 
              "version": "1.0.0"
            }
          },
          "inputs": [
            {
              "name": "input",
              "shape": [-1, 10],
              "dtype": "float32"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "shape": [1],
              "dtype": "float32"
            }
          ],
          "export": []
        }
      },
      "expected": {
        "error": {
          "code": "neuro.schema.invalid_shape",
          "message_pattern": ".*negative.*dimension.*"
        }
      },
      "metadata": {
        "priority": "high"
      }
    },
    {
      "id": "unknown_operator_type",
      "title": "Unknown Operator Type",
      "description": "Verify that unknown operator types are rejected",
      "feature": "schema_validation",
      "tags": ["validation", "operators"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "test_model",
              "version": "1.0.0"
            }
          },
          "inputs": [
            {
              "name": "input",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "export": [
            {
              "name": "unknown_op",
              "type": "nonexistent_operator",
              "arguments": ["input"]
            }
          ]
        }
      },
      "expected": {
        "error": {
          "code": "neuro.type.unknown_operator",
          "message_pattern": ".*nonexistent_operator.*not.*found.*"
        }
      },
      "metadata": {
        "priority": "high"
      }
    }
  ]
}
