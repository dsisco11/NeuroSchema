{
  "$schema": "../../tests.schema.json",
  "metadata": {
    "name": "Edge Cases and Cross-Format Tests",
    "version": "1.0.0",
    "description": "Tests for edge cases, unusual scenarios, and cross-format import handling",
    "category": "validation"
  },
  "tests": [
    {
      "id": "empty_import_list",
      "title": "Empty Import List",
      "description": "Test handling of models with empty import arrays",
      "feature": "import_resolution",
      "tags": ["imports", "edge_case", "empty"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "standalone_model",
              "version": "1.0.0"
            }
          },
          "imports": [],
          "inputs": [
            {
              "name": "input",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "shape": [1],
              "dtype": "float32"
            }
          ],
          "export": [
            {
              "name": "identity",
              "type": "identity",
              "arguments": ["input"]
            }
          ]
        }
      },
      "expected": {
        "success": true,
        "validation_result": true
      }
    },
    {
      "id": "missing_import_list",
      "title": "Missing Import List",
      "description": "Test handling of models without an imports field",
      "feature": "import_resolution",
      "tags": ["imports", "edge_case", "missing_field"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "no_imports_model",
              "version": "1.0.0"
            }
          },
          "inputs": [
            {
              "name": "input",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "shape": [1],
              "dtype": "float32"
            }
          ],
          "export": [
            {
              "name": "identity",
              "type": "identity",
              "arguments": ["input"]
            }
          ]
        }
      },
      "expected": {
        "success": true,
        "validation_result": true
      }
    },
    {
      "id": "import_with_query_parameters",
      "title": "Import with Query Parameters",
      "description": "Test handling of import paths with query parameters",
      "feature": "import_resolution",
      "tags": ["imports", "edge_case", "query_params"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "query_import_model",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "parameterized_model",
              "type": "neuro",
              "path": "./model.neuro.json?version=v1&config=production"
            }
          ],
          "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
          "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
          "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
        },
        "parameters": {
          "referenced_models": {
            "model.neuro.json": {
              "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
              "metadata": {"model": {"name": "parameterized_model", "version": "1.0.0"}},
              "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
              "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
              "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
            }
          }
        }
      },
      "expected": {
        "success": true,
        "validation_result": true
      }
    },
    {
      "id": "import_with_fragments",
      "title": "Import with URL Fragments",
      "description": "Test handling of import paths with URL fragments",
      "feature": "import_resolution",
      "tags": ["imports", "edge_case", "fragments"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "fragment_import_model",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "section_model",
              "type": "neuro",
              "path": "./model.neuro.json#section1"
            }
          ],
          "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
          "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
          "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
        },
        "parameters": {
          "referenced_models": {
            "model.neuro.json": {
              "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
              "metadata": {"model": {"name": "section_model", "version": "1.0.0"}},
              "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
              "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
              "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
            }
          }
        }
      },
      "expected": {
        "success": true,
        "validation_result": true
      }
    },
    {
      "id": "case_sensitive_import_paths",
      "title": "Case Sensitive Import Paths",
      "description": "Test case sensitivity in import path resolution",
      "feature": "import_resolution",
      "tags": ["imports", "edge_case", "case_sensitivity"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "case_test_model",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "MixedCase",
              "type": "neuro",
              "path": "./MixedCaseModel.neuro.json"
            }
          ],
          "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
          "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
          "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
        },
        "parameters": {
          "referenced_models": {
            "MixedCaseModel.neuro.json": {
              "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
              "metadata": {"model": {"name": "MixedCase", "version": "1.0.0"}},
              "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
              "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
              "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
            }
          }
        }
      },
      "expected": {
        "success": true,
        "validation_result": true
      }
    },
    {
      "id": "unicode_import_paths",
      "title": "Unicode Characters in Import Paths",
      "description": "Test handling of Unicode characters in import paths and model names",
      "feature": "import_resolution",
      "tags": ["imports", "edge_case", "unicode"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "unicode_test_モデル",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "国際化_model",
              "type": "neuro",
              "path": "./国際化_モデル.neuro.json"
            }
          ],
          "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
          "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
          "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
        },
        "parameters": {
          "referenced_models": {
            "国際化_モデル.neuro.json": {
              "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
              "metadata": {"model": {"name": "国際化_model", "version": "1.0.0"}},
              "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
              "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
              "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
            }
          }
        }
      },
      "expected": {
        "success": true,
        "validation_result": true
      }
    },
    {
      "id": "duplicate_import_names",
      "title": "Duplicate Import Names",
      "description": "Test error handling when multiple imports have the same name",
      "feature": "import_resolution",
      "tags": ["imports", "edge_case", "duplicate_names", "validation"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "duplicate_names_model",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "duplicate",
              "type": "neuro",
              "path": "./model_a.neuro.json"
            },
            {
              "name": "duplicate",
              "type": "neuro",
              "path": "./model_b.neuro.json"
            }
          ],
          "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
          "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
          "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
        },
        "parameters": {
          "referenced_models": {
            "model_a.neuro.json": {
              "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
              "metadata": {"model": {"name": "model_a", "version": "1.0.0"}},
              "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
              "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
              "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
            },
            "model_b.neuro.json": {
              "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
              "metadata": {"model": {"name": "model_b", "version": "1.0.0"}},
              "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
              "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
              "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
            }
          }
        }
      },
      "expected": {
        "error": {
          "code": "neuro.ref.duplicate_import",
          "message_pattern": ".*[Dd]uplicate.*import.*name.*duplicate.*"
        }
      }
    },
    {
      "id": "very_long_import_path",
      "title": "Very Long Import Path",
      "description": "Test handling of extremely long import paths",
      "feature": "import_resolution",
      "tags": ["imports", "edge_case", "long_path"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "long_path_model",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "deep_model",
              "type": "neuro",
              "path": "./very/deeply/nested/directory/structure/with/many/levels/and/a/really/really/really/long/path/to/the/target/model/file/that/tests/path/length/limits/final_model.neuro.json"
            }
          ],
          "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
          "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
          "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
        },
        "parameters": {
          "referenced_models": {
            "very/deeply/nested/directory/structure/with/many/levels/and/a/really/really/really/long/path/to/the/target/model/file/that/tests/path/length/limits/final_model.neuro.json": {
              "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
              "metadata": {"model": {"name": "deep_model", "version": "1.0.0"}},
              "inputs": [{"name": "input", "shape": [10], "dtype": "float32"}],
              "outputs": [{"name": "output", "shape": [1], "dtype": "float32"}],
              "export": [{"name": "identity", "type": "identity", "arguments": ["input"]}]
            }
          }
        }
      },
      "expected": {
        "success": true,
        "validation_result": true
      }
    }
  ]
}
