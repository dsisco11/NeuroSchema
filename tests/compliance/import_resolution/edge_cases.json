{
  "$schema": "../../tests.schema.json",
  "metadata": {
    "name": "Edge Cases and Cross-Format Tests",
    "version": "1.0.0",
    "description": "Tests for edge cases, unusual scenarios, and cross-format import handling",
    "category": "validation"
  },
  "tests": [
    {
      "id": "duplicate_import_names",
      "title": "Duplicate Import Names",
      "description": "Test error handling when multiple imports have the same name",
      "feature": "import_resolution",
      "tags": [
        "imports",
        "edge_case",
        "duplicate_names",
        "validation"
      ],
      "inputs": {
        "files": {
          "./model_b.neuro.json": {
            "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
            "metadata": {
              "model": {
                "name": "model_b",
                "version": "1.0.0"
              }
            },
            "inputs": [
              {
                "name": "input",
                "shape": [
                  10
                ],
                "dtype": "float32"
              }
            ],
            "outputs": [
              {
                "name": "output",
                "shape": [
                  1
                ],
                "dtype": "float32"
              }
            ],
            "export": [
              {
                "name": "identity",
                "type": "identity",
                "arguments": [
                  "input"
                ]
              }
            ]
          },
          "duplicate_names_model.neuro.json": {
            "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
            "metadata": {
              "model": {
                "name": "duplicate_names_model",
                "version": "1.0.0"
              }
            },
            "imports": [
              {
                "name": "duplicate",
                "type": "neuro",
                "path": "./model_a.neuro.json"
              },
              {
                "name": "duplicate",
                "type": "neuro",
                "path": "./model_b.neuro.json"
              }
            ],
            "inputs": [
              {
                "name": "input",
                "shape": [
                  10
                ],
                "dtype": "float32"
              }
            ],
            "outputs": [
              {
                "name": "output",
                "shape": [
                  1
                ],
                "dtype": "float32"
              }
            ],
            "export": [
              {
                "name": "identity",
                "type": "identity",
                "arguments": [
                  "input"
                ]
              }
            ]
          },
          "./model_a.neuro.json": {
            "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
            "metadata": {
              "model": {
                "name": "model_a",
                "version": "1.0.0"
              }
            },
            "inputs": [
              {
                "name": "input",
                "shape": [
                  10
                ],
                "dtype": "float32"
              }
            ],
            "outputs": [
              {
                "name": "output",
                "shape": [
                  1
                ],
                "dtype": "float32"
              }
            ],
            "export": [
              {
                "name": "identity",
                "type": "identity",
                "arguments": [
                  "input"
                ]
              }
            ]
          }
        },
        "import_target": "duplicate_names_model.neuro.json"
      },
      "expected": {
        "error": {
          "code": "neuro.ref.duplicate_import",
          "message_pattern": ".*[Dd]uplicate.*import.*name.*duplicate.*"
        }
      }
    },
    {
      "id": "very_long_import_path",
      "title": "Very Long Import Path",
      "description": "Test handling of extremely long import paths",
      "feature": "import_resolution",
      "tags": [
        "imports",
        "edge_case",
        "long_path"
      ],
      "inputs": {
        "files": {
          "long_path_model.neuro.json": {
            "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
            "metadata": {
              "model": {
                "name": "long_path_model",
                "version": "1.0.0"
              }
            },
            "imports": [
              {
                "name": "deep_model",
                "type": "neuro",
                "path": "./very/deeply/nested/directory/structure/with/many/levels/and/a/really/really/really/long/path/to/the/target/model/file/that/tests/path/length/limits/final_model.neuro.json"
              }
            ],
            "inputs": [
              {
                "name": "input",
                "shape": [
                  10
                ],
                "dtype": "float32"
              }
            ],
            "outputs": [
              {
                "name": "output",
                "shape": [
                  1
                ],
                "dtype": "float32"
              }
            ],
            "export": [
              {
                "name": "identity",
                "type": "identity",
                "arguments": [
                  "input"
                ]
              }
            ]
          },
          "./very/deeply/nested/directory/structure/with/many/levels/and/a/really/really/really/long/path/to/the/target/model/file/that/tests/path/length/limits/final_model.neuro.json": {
            "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
            "metadata": {
              "model": {
                "name": "deep_model",
                "version": "1.0.0"
              }
            },
            "inputs": [
              {
                "name": "input",
                "shape": [
                  10
                ],
                "dtype": "float32"
              }
            ],
            "outputs": [
              {
                "name": "output",
                "shape": [
                  1
                ],
                "dtype": "float32"
              }
            ],
            "export": [
              {
                "name": "identity",
                "type": "identity",
                "arguments": [
                  "input"
                ]
              }
            ]
          }
        },
        "import_target": "long_path_model.neuro.json"
      },
      "expected": {
        "success": true,
        "validation_result": true
      }
    }
  ]
}