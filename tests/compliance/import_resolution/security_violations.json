{
  "$schema": "../../tests.schema.json",
  "metadata": {
    "name": "Path Escaping and Security Tests",
    "version": "1.0.0",
    "description": "Tests for validating path escaping, directory traversal prevention, and import security",
    "category": "security"
  },
  "tests": [
    {
      "id": "directory_traversal_parent",
      "title": "Directory Traversal - Parent Directory",
      "description": "Verify that path traversal attempts using '../' are properly handled",
      "feature": "import_resolution",
      "tags": ["security", "path_traversal", "imports"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "malicious_import_test",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "malicious_module",
              "type": "neuro",
              "path": "../../../sensitive/model.neuro.json"
            }
          ],
          "inputs": [
            {
              "name": "input",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "outputs": [
            {
              "name": "output", 
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "export": [
            {
              "name": "identity",
              "type": "identity",
              "arguments": ["input"]
            }
          ]
        }
      },
      "expected": {
        "error": {
          "code": "neuro.ref.import_security_violation"
        }
      }
    },
    {
      "id": "directory_traversal_relative_complex",
      "title": "Directory Traversal - Complex Relative Path",
      "description": "Verify that complex path traversal attempts are detected",
      "feature": "import_resolution",
      "tags": ["security", "path_traversal", "imports"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "complex_traversal_test",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "malicious_weights",
              "type": "safetensors",
              "path": "./modules/../../../system/config.safetensors"
            }
          ],
          "inputs": [
            {
              "name": "input",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "shape": [10], 
              "dtype": "float32"
            }
          ],
          "export": [
            {
              "name": "identity",
              "type": "identity",
              "arguments": ["input"]
            }
          ]
        }
      },
      "expected": {
        "error": {
          "code": "neuro.ref.import_security_violation"
        }
      }
    },
    {
      "id": "absolute_path_prevention",
      "title": "Absolute Path Prevention",
      "description": "Verify that absolute paths in imports are rejected for security",
      "feature": "import_resolution",
      "tags": ["security", "absolute_path", "imports"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "absolute_path_test",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "system_model",
              "type": "neuro",
              "path": "/etc/passwd.neuro.json"
            }
          ],
          "inputs": [
            {
              "name": "input",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "export": [
            {
              "name": "identity",
              "type": "identity", 
              "arguments": ["input"]
            }
          ]
        }
      },
      "expected": {
        "error": {
          "code": "neuro.ref.import_security_violation"
        }
      }
    },
    {
      "id": "path_injection_null_byte",
      "title": "Path Injection - Null Byte",
      "description": "Verify that null byte injection attempts in paths are detected",
      "feature": "import_resolution",
      "tags": ["security", "path_injection", "imports"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "null_byte_test",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "injected_path",
              "type": "neuro",
              "path": "./safe_model.neuro.json\u0000../../malicious.neuro.json"
            }
          ],
          "inputs": [
            {
              "name": "input",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "export": [
            {
              "name": "identity",
              "type": "identity",
              "arguments": ["input"]
            }
          ]
        }
      },
      "expected": {
        "error": {
          "code": "neuro.ref.invalid_path",
          "message_pattern": ".*invalid character.*path.*"
        }
      }
    },
    {
      "id": "valid_relative_path",
      "title": "Valid Relative Path",
      "description": "Verify that legitimate relative paths within the allowed scope are accepted",
      "feature": "import_resolution",
      "tags": ["security", "valid_path", "imports"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "valid_path_test",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "encoder",
              "type": "neuro", 
              "path": "./modules/encoder.neuro.json"
            },
            {
              "name": "weights",
              "type": "safetensors",
              "path": "./weights/model.safetensors"
            }
          ],
          "inputs": [
            {
              "name": "input",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "export": [
            {
              "name": "encoder_result",
              "type": "encoder",
              "arguments": ["input"]
            }
          ]
        },
        "parameters": {
          "imported_files": {
            "./modules/encoder.neuro.json": {
              "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
              "metadata": {
                "model": {
                  "name": "encoder",
                  "version": "1.0.0"
                }
              },
              "inputs": [
                {
                  "name": "input",
                  "shape": [10],
                  "dtype": "float32"
                }
              ],
              "outputs": [
                {
                  "name": "output",
                  "shape": [10],
                  "dtype": "float32"
                }
              ],
              "export": [
                {
                  "name": "encoder",
                  "type": "linear",
                  "arguments": ["input"]
                }
              ]
            },
            "modules/encoder.neuro.json": {
              "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
              "metadata": {
                "model": {
                  "name": "encoder",
                  "version": "1.0.0"
                }
              },
              "inputs": [
                {
                  "name": "input",
                  "shape": [10],
                  "dtype": "float32"
                }
              ],
              "outputs": [
                {
                  "name": "output",
                  "shape": [10],
                  "dtype": "float32"
                }
              ],
              "export": [
                {
                  "name": "encoder",
                  "type": "linear",
                  "arguments": ["input"]
                }
              ]
            },
            "./weights/model.safetensors": {
              "mock_data": "safetensors_binary_data_placeholder"
            },
            "weights/model.safetensors": {
              "mock_data": "safetensors_binary_data_placeholder"
            }
          }
        }
      },
      "expected": {
        "success": true,
        "parsed_structure": {
          "has_imports": true,
          "import_count": 2,
          "resolved_types": ["encoder"]
        }
      }
    },
    {
      "id": "windows_path_traversal",
      "title": "Windows Path Traversal Prevention",
      "description": "Verify that Windows-specific path traversal attempts using backslashes are detected",
      "feature": "import_resolution",
      "tags": ["security", "windows", "path_traversal", "imports"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "windows_traversal_test",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "malicious_module",
              "type": "neuro",
              "path": "..\\..\\..\\system\\config.neuro.json"
            }
          ],
          "inputs": [
            {
              "name": "input",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "export": [
            {
              "name": "identity",
              "type": "identity",
              "arguments": ["input"]
            }
          ]
        }
      },
      "expected": {
        "error": {
          "code": "neuro.ref.import_security_violation"
        }
      }
    },
    {
      "id": "special_character_paths",
      "title": "Special Character Path Validation",
      "description": "Verify that paths with special characters are properly validated",
      "feature": "import_resolution",
      "tags": ["security", "special_chars", "imports"],
      "inputs": {
        "neuro_model": {
          "$schema": "https://raw.githubusercontent.com/neuro-format/schemas/2025-1/neuro.schema.json",
          "metadata": {
            "model": {
              "name": "special_chars_test",
              "version": "1.0.0"
            }
          },
          "imports": [
            {
              "name": "special_module",
              "type": "neuro",
              "path": "./modules/<script>alert('xss')</script>.neuro.json"
            }
          ],
          "inputs": [
            {
              "name": "input",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "outputs": [
            {
              "name": "output",
              "shape": [10],
              "dtype": "float32"
            }
          ],
          "export": [
            {
              "name": "identity",
              "type": "identity",
              "arguments": ["input"]
            }
          ]
        }
      },
      "expected": {
        "error": {
          "code": "neuro.ref.invalid_path",
          "message_pattern": ".*invalid character.*filename.*"
        }
      }
    }
  ]
}